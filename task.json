[
  {
    "instruction": "How to Change the DPI of Your Android Device",
    "input": "",
    "output": "1. Open your Android's Settings.\n2. Scroll to the bottom of the Settings menu.\n3. Select About Device.\n4. Scroll to the bottom of the About Device menu.\n5. Tap Build Number seven times.\n6. Tap the \"Back\" button.\n7. Select Developer Options.\n8. Select USB Debugging.\n9. Tap OK when prompted.\n10. Open the Android Studio website.\n11. Click Download Android Studio.\n12. Check the \"terms and conditions\" box.\n13. Click Download Android Studio.\n14. Wait for your download to finish.\n15. Double-click the setup icon.\n16. Follow the setup wizard instructions.\n17. Wait for the Android SDK to finish installing.\n18. Click Finish when the setup is complete.\n19. Follow the on-screen instructions.\n20. Click Finish again.\n21. Connect your Android to your computer.\n22. Open your computer's command console.\n23. Type \"adb shell dumpsys display | grep mBaseDisplayInfo\" into your command console.\n24. Press Enter or Return.\n25. Locate your Android device's current DPI.\n26. Type \"adb shell wm density DPI && adb reboot\" into your command console.\n27. Press Enter or Return."
  },
  {
    "instruction": "Design a task based on the given text.",
    "input": "Module \t\t: UIMapLegend.cpp",
    "output": "UI Map Legend Wnd (PDA : Task) class impl\n#output#: #include \"stdafx.h\"\n#include \"UIMapLegend.h\"\n\n#include \"xrUIXmlParser.h\"\n#include \"UIXmlInit.h\"\n#include \"UIHelper.h\"\n\n#include \"UIFrameWindow.h\"\n#include \"UIScrollView.h\"\n#include \"UIStatic.h\"\n#include \"UI3tButton.h\"\n#include \"UICheckButton.h\"\n#include \"UIFrameLineWnd.h\"\n#include \"UIHint.h\"\n\n#include \"UIInventoryUtilities.h\"\n#include \"string_table.h\"\n#include \"Level.h\"\n\n\nUIMapLegend::UIMapLegend()\n{\n\n}\n\nUIMapLegend::~UIMapLegend()\n{\n\txr_delete( m_list );\n}\n\nvoid UIMapLegend::init_from_xml( CUIXml& xml, LPCSTR path )\n{\n\tCUIXmlInit::InitWindow( xml, path, 0, this );\n\n\tXML_NODE*  stored_root = xml.GetLocalRoot();\n\tXML_NODE*  tmpl_root   = xml.NavigateToNode( path, 0 );\n\txml.SetLocalRoot( tmpl_root );\n\n\tm_background = UIHelper::CreateFrameWindow( xml, \"background_frame\", this );\n\tm_caption    = UIHelper::CreateStatic( xml, \"t_caption\", this );\n\tm_btn_close  = UIHelper::Create3tButtonEx( xml, \"btn_close\", this );\n\n\tm_list = new CUIScrollView();\n\tAttachChild( m_list );\n\tCUIXmlInit::InitScrollView( xml, \"legend_list\", 0, m_list );\n\n\tUIMapLegendItem* list_item = NULL;\n\n\tint cn = xml.GetNodesNum( \"legend_list\", 0, \"item\" );\n\tXML_NODE* root2 = xml.NavigateToNode( \"legend_list\", 0 );\n\txml.SetLocalRoot( root2 );\n\n\tfor ( int i = 0; i < cn ; ++i )\n\t{\n\t\tlist_item = new UIMapLegendItem();\n\t\tlist_item->init_from_xml( xml, i );\n\t\tm_list->AddWindow( list_item, true );\n\n\t\txml.SetLocalRoot( root2 );\n\t}\n\txml.SetLocalRoot( stored_root );\n}\n\nvoid UIMapLegend::Show( bool status )\n{\n\tinherited::Show( status );\n}\n\nvoid UIMapLegend::SendMessage( CUIWindow* pWnd, s16 msg, void* pData )\n{\n\tif ( pWnd == m_btn_close )\n\t{\n\t\tif ( msg == BUTTON_DOWN )\n\t\t{\n\t\t\tShow( false );\n\t\t\treturn;\n\t\t}\n\t}\n\tinherited::SendMessage( pWnd, msg, pData );\n}"
  },
  {
    "instruction": "Design a task based on the given text.",
    "input": "This is the header file for the MD5 message-digest algorithm.\n * The algorithm is due to Ron Rivest.  This code was\n * written by Colin Plumb in 1993, no copyright is claimed.\n * This code is in the public domain; do with it what you wish.\n *\n * Equivalent code is available from RSA Data Security, Inc.\n * This code has been tested against that, and is equivalent,\n * except that you don't need to include two pages of legalese\n * with every copy.\n * To compute the message digest of a chunk of bytes, declare an\n * MD5Context structure, pass it to MD5Init, call MD5Update as\n * needed on buffers full of bytes, and then call MD5Final, which\n * will fill a supplied 16-byte array with the digest.",
    "output": "#include <stdint.h>\n#include <stdlib.h>\n\nnamespace rtc {\n\nstruct MD5Context {\n  uint32_t buf[4];\n  uint32_t bits[2];\n  uint32_t in[16];\n};\n\nvoid MD5Init(MD5Context* context);\nvoid MD5Update(MD5Context* context, const uint8_t* data, size_t len);\nvoid MD5Final(MD5Context* context, uint8_t digest[16]);\nvoid MD5Transform(uint32_t buf[4], const uint32_t in[16]);\n\n}  // namespace rtc\n\n#endif  // WEBRTC_BASE_MD5_H_"
  },
  {
    "instruction": "How to Jailbreak an iPhone Using Redsn0w",
    "input": "",
    "output": "1. Navigate to the jailbreak wizard on Redsn0w’s website at http://www.redsn0w.us/2013/10/the-ultimate-jailbreak-wizard.html.\n\n2. Select “iPhone” from the iDevice dropdown menu, then select its Model.\n\n3. Select your iPhone’s iOS, then select your computer’s operating system under “Platform.”\n\n4. Tap on “Settings,” tap on “General,” then tap on “About” to determine your iPhone’s iOS.\n\n5. Click on “Check your iDevice.” The jailbreak wizard will inform you of the software needed to jailbreak your iPhone.\n\n6. Navigate to the jailbreak software downloads page at http://www.redsn0w.us/2010/03/download-direct-links-jailbreak-guides.html.\n\n7. Select your operating system, then select the required jailbreak tool under “Software.”\n\n8. Use your search engine to locate the official developer’s website if your tool isn’t listed under “Software.” For example, to download Pangu, type “Pangu” into search and navigate to the developer’s site at http://en.pangu.io/.\n\n9. Select the software version needed under “Version,” then select “Download Selected Tool.” The jailbreak software will begin downloading itself to your computer.\n\n10. Double-click on the jailbreak software installer file, then follow the on-screen instructions to install the jailbreak software on your computer.\n\n11. Back up your iPhone using iTunes or iCloud.\n\n12. Connect the iPhone to your computer using a USB cable.\n\n13. Click on “Start,” then follow the on-screen prompts to jailbreak your device.\n\n14. Wait for the jailbreaking process to end, then disconnect your iPhone from the computer."
  }
]